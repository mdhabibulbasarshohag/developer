Home
Key documents
Contact
Presiding Council


common css :- 

container mx-auto 2xl:px-0 xl:px-0 lg:px-0 md:px-2 sm:px-2 px-2

2xl:py-28 xl:py-28 lg:py-20 md:py-16 sm:py-16 py-12

text-[#122c36]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-normal

2xl:text-6xl xl:text-6xl lg:text-5xl md:text-4xl sm:text-3xl text-2xl font-bold text-[#2A6880]








bg-left-top bg-no-repeat bg-cover 2xl:mt-16 xl:mt-16 lg:mt-12 md:mt-12 sm:mt-12 mt-12

2xl:mt-24 xl:mt-24 lg:mt-24 md:mt-[74px] sm:mt-[66px] mt-[66px] bg-cover bg-left-top




 2xl:text-4xl xl:text-4xl lg:text-4xl md:text-3xl sm:text-2xl text-2xl font-semibold text-white border-b-2 border-transparent pb-2
 2xl:text-4xl xl:text-4xl lg:text-4xl md:text-3xl sm:text-2xl text-2xl font-semibold text-white border-b-2 border-teal-100 pb-2





// import { useEffect, useState } from "react";

// import LoadingScreen from "../components/LoadingScreen/LoadingScreen";  // Ensure correct import

// const [isLoading, setIsLoading] = useState(true);


  // useEffect(() => {
  //   const timer = setTimeout(() => {
  //     setIsLoading(false);
  //   }, 2000);

  //   return () => clearTimeout(timer);
  // }, []);


  {/* {isLoading ? (
        <LoadingScreen onComplete={() => setIsLoading(false)} />
      ) : ( */}

       {/* )} */}















       import { useEffect, useState } from "react";
// import { useNavigate } from "react-router-dom";
// import { toast } from "react-toastify";
// import ToastifyContainer from "../../components/Common/ToastifyContainer";

// const JoinNow = () => {
//     const [modal, setModal] = useState(false);
//     const [selectedMembership, setSelectedMembership] = useState("");
//     const [email, setEmail] = useState("");
//     const [password, setPassword] = useState("");

//     const closeModal = () => setModal(false);

//     const handleCheckboxChange = (membershipType) => {
//         setSelectedMembership(membershipType);
//     };

//     const handleNextClick = () => {
//         if (!selectedMembership) {
//             toast.error("Please select a membership option before proceeding.");
//         } else {
//             setModal(true);
//         }
//     };

//     const navigate = useNavigate();

//     const handleSubmit = (event) => {
//         event.preventDefault();
//         if (email && password) {
//             toast.success("You have successfully joined the International MAOI Expert Group!");
//             console.log("Email:", email, "Password:", password);
//             navigate("/membership-complete");
//         } else {
//             toast.error("Please fill in both fields.");
//         }
//     };
//     useEffect(() => {
//         window.scrollTo({
//             top: 0,
//             behavior: "smooth",
//         });
//     }, []);

//     return (
//         <section className="2xl:py-28 xl:py-28 lg:py-20 md:py-16 sm:py-16 py-12 2xl:mt-16 xl:mt-16 lg:mt-12 md:mt-12 sm:mt-12 mt-12">
//             <div className="container mx-auto 2xl:px-0 xl:px-0 lg:px-0 md:px-2 sm:px-2 px-2">
//                 <div className="flex flex-col gap-10">
//                     <div className="flex flex-col gap-10">
//                         <h3 className="2xl:text-6xl xl:text-6xl lg:text-5xl md:text-4xl sm:text-3xl text-2xl font-bold text-[#2A6880]">
//                             Membership benefits
//                         </h3>
//                         <div className="flex flex-col gap-4">
//                             <p className="text-[#122c36]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-normal">
//                                 Membership to the International MAOI Expert Group is open to all bona fide healthcare workers and researchers with an interest in monoamine oxidase inhibitor antidepressants.
//                             </p>
//                             <p className="text-[#122c36]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-normal">
//                                 The benefits of membership include facilitated access to reliable knowledge and the feedback and advice from the participating experts, as well as the collegiate support of other practising specialists who interact to advise and support with the practical management of patients in need.
//                             </p>
//                         </div>

//                         <h4 className="text-[#122c36]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-normal">
//                             Benefits overview:
//                         </h4>
//                         <ul className="list-[lower-roman] pl-7 text-[#122c36]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-normal flex flex-col gap-3">
//                             <li>Educational videos and podcasts</li>
//                             <li>Access to ever-increasing library of articles and PDFs</li>
//                             <li>Updates on recent publications and ‘recommended reading’ list</li>
//                             <li>Personal, real-time expert advice (Zoom/Skype)</li>
//                             <li>v.	Support with problems related to interactions with professional organisations, health agencies, insurance companies, and legal-type issues (incl. support in challenging & educating health authorities)</li>
//                             <li>Admission to a semi-annual webinar</li>
//                             <li>Assistance/advice with peer-reviewed publications</li>
//                         </ul>
//                     </div>

//                     <div className="flex flex-col gap-10">
//                         <h3 className="2xl:text-6xl xl:text-6xl lg:text-5xl md:text-4xl sm:text-3xl text-2xl font-bold text-[#2A6880]">
//                             Membership fee
//                         </h3>
//                         <p className="text-[#122c36]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-normal">
//                             Following consultation with the Presiding Council, the Group has resolved to introduce a membership fee which will grant members access to, and participation rights in, the Roundtable discussion group, as well as access to the clinical recommendations, patient information documents, and general educational content posted in the members-only section of the website.
//                         </p>
//                     </div>


//                     <div className="flex flex-col gap-10">
//                         <h3 className="2xl:text-6xl xl:text-6xl lg:text-5xl md:text-4xl sm:text-3xl text-2xl font-bold text-[#2A6880]">
//                             Select a membership option (per annum)
//                         </h3>
//                         <form className="flex flex-col gap-10">
//                             <div className="flex items-center gap-3">
//                                 <input
//                                     type="checkbox"
//                                     id="full-member"
//                                     onChange={() => handleCheckboxChange("full")}
//                                     checked={selectedMembership === "full"}
//                                 />
//                                 <label htmlFor="full-member" className="text-[#122c36]/70">
//                                     Full member: $100 (includes access to the Topicbox Roundtable discussion group)
//                                 </label>
//                             </div>
//                             <div className="flex items-center gap-3">
//                                 <input
//                                     type="checkbox"
//                                     id="discretionary-member"
//                                     onChange={() => handleCheckboxChange("discretionary")}
//                                     checked={selectedMembership === "discretionary"}
//                                 />
//                                 <label htmlFor="discretionary-member" className="text-[#122c36]/70">
//                                     Discretionary membership*: $25
//                                 </label>
//                             </div>
//                             <p className="text-[#122c36]/70">**In order to maintain our objective of maximum inclusivity, there is a discretionary membship option for financially disadvantaged participants.</p>
//                             <button
//                                 onClick={handleNextClick}
//                                 type="button"
//                                 className="2xl:w-1/6 xl:w-1/6 lg:w-1/6 md:w-full sm:w-full w-full py-4 px-6 bg-[#2A6880] text-white 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-bold rounded-2xl"
//                             >
//                                 Next
//                             </button>
//                         </form>
//                     </div>

//                     {modal && (
//                         <div className="fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center z-50">
//                             <div className="bg-white p-8 rounded-lg 2xl:w-1/3 xl:w-1/3 lg:w-1/3 md:w-full sm:w-full w-full">
//                                 <div className="flex flex-col gap-16 relative">
//                                     <h4 className="2xl:text-6xl xl:text-6xl lg:text-5xl md:text-4xl sm:text-3xl text-2xl font-bold text-[#2A6880] text-center">Sign In</h4>
//                                     <p className="text-[#122c36]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-normal text-center">Sign In to complete your membership.</p>
//                                     <button
//                                         onClick={closeModal}
//                                         className="py-2 px-4 bg-gray-500 text-white rounded-lg absolute top-2 right-2"
//                                     >
//                                         Close
//                                     </button>
//                                 </div>
//                                 <form onSubmit={handleSubmit} className="flex flex-col gap-8">
//                                     <div className="flex flex-col gap-8">
//                                         <div className="flex flex-col gap-4">
//                                             <label
//                                                 className="text-[#122c36]/70 2xl:text-2xl xl:text-2xl lg:text-2xl md:text-lg sm:text-lg text-lg font-normal"
//                                                 htmlFor="email"
//                                             >
//                                                 Email Address*
//                                             </label>
//                                             <input
//                                                 className="text-[#7e8b99] text-base font-normal px-6 py-4 bg-[#fafbfc] rounded-2xl border border-[#709aaa] outline-[#2A6880]"
//                                                 type="email"
//                                                 name="email"
//                                                 placeholder="Enter your email address"
//                                                 id="email"
//                                                 value={email}
//                                                 onChange={(e) => setEmail(e.target.value)}
//                                             />
//                                         </div>
//                                         <div className="flex flex-col gap-4">
//                                             <label
//                                                 className="text-[#122c36]/70 2xl:text-2xl xl:text-2xl lg:text-2xl md:text-lg sm:text-lg text-lg font-normal"
//                                                 htmlFor="password"
//                                             >
//                                                 Password*
//                                             </label>
//                                             <input
//                                                 className="text-[#7e8b99] text-base font-normal px-6 py-4 bg-[#fafbfc] rounded-2xl border border-[#709aaa] outline-[#2A6880]"
//                                                 type="password"
//                                                 name="password"
//                                                 placeholder="Enter your password"
//                                                 id="password"
//                                                 value={password}
//                                                 onChange={(e) => setPassword(e.target.value)}
//                                             />
//                                         </div>
//                                     </div>

//                                     <button
//                                         type="submit"
//                                         className="bg-[#2A6880]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-bold text-white py-4 px-6 rounded-2xl"
//                                     >
//                                         Sign In
//                                     </button>
//                                 </form>
//                             </div>
//                         </div>
//                     )}
//                 </div>
//             </div>
//             <ToastifyContainer />
//         </section>
//     );
// };

// export default JoinNow;











<button className="text-[#122c36]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-medium underline flex justify-start items-center gap-4">
                            <div className="w-6 h-6">
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    className="w-full h-full"
                                    viewBox="0 0 21 22"
                                    fill="none"
                                >
                                    <g clipPath="url(#clip0_4327_2063)">
                                        <path
                                            fillRule="evenodd"
                                            clipRule="evenodd"
                                            d="M10.5 21.5C16.299 21.5 21 16.799 21 11C21 5.20101 16.299 0.5 10.5 0.5C4.70101 0.5 0 5.20101 0 11C0 16.799 4.70101 21.5 10.5 21.5ZM15.3656 10.0719L11.4281 6.13442C10.9155 5.62186 10.0845 5.62186 9.57192 6.13442C9.05936 6.64699 9.05936 7.47801 9.57192 7.99058L11.2688 9.6875H6.5625C5.83763 9.6875 5.25 10.2751 5.25 11C5.25 11.7249 5.83763 12.3125 6.5625 12.3125H11.2688L9.57192 14.0094C9.05936 14.522 9.05936 15.353 9.57192 15.8656C10.0845 16.3781 10.9155 16.3781 11.4281 15.8656L15.3656 11.9281C15.8781 11.4155 15.8781 10.5845 15.3656 10.0719Z"
                                            fill="#122C36"
                                        />
                                    </g>
                                    <defs>
                                        <clipPath id="clip0_4327_2063">
                                            <rect className="w-full h-full" fill="white" transform="translate(0 0.5)" />
                                        </clipPath>
                                    </defs>
                                </svg>
                            </div>

                            <span>
                                Donate using creditcard
                            </span>

                            <div className="w-6 h-8">
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    className="w-full h-full"
                                    viewBox="0 0 33 33"
                                    fill="none"
                                >
                                    <g clipPath="url(#clip0_4394_11946)">
                                        <path
                                            d="M30.58 5.62012H2.42C1.36144 5.62012 0.5 6.48155 0.5 7.54012V25.4601C0.5 26.5187 1.36144 27.3801 2.42 27.3801H30.58C31.6386 27.3801 32.5 26.5187 32.5 25.4601V7.54012C32.5 6.48155 31.6386 5.62012 30.58 5.62012ZM31.22 25.4601C31.22 25.8121 30.932 26.1001 30.58 26.1001H2.42C2.06675 26.1001 1.78 25.8121 1.78 25.4601V7.54012C1.78 7.1868 2.06675 6.90012 2.42 6.90012H30.58C30.932 6.90012 31.22 7.1868 31.22 7.54012V25.4601Z"
                                            fill="#2A6880"
                                        />
                                        <path
                                            d="M30.58 5.62012H2.42C1.36144 5.62012 0.5 6.48155 0.5 7.54012V25.4601C0.5 26.5187 1.36144 27.3801 2.42 27.3801H30.58C31.6386 27.3801 32.5 26.5187 32.5 25.4601V7.54012C32.5 6.48155 31.6386 5.62012 30.58 5.62012ZM31.22 25.4601C31.22 25.8121 30.932 26.1001 30.58 26.1001H2.42C2.06675 26.1001 1.78 25.8121 1.78 25.4601V7.54012C1.78 7.1868 2.06675 6.90012 2.42 6.90012H30.58C30.932 6.90012 31.22 7.1868 31.22 7.54012V25.4601Z"
                                            fill="black"
                                            fillOpacity="0.2"
                                        />
                                        <path
                                            d="M30.58 5.62012H2.42C1.36144 5.62012 0.5 6.48155 0.5 7.54012V25.4601C0.5 26.5187 1.36144 27.3801 2.42 27.3801H30.58C31.6386 27.3801 32.5 26.5187 32.5 25.4601V7.54012C32.5 6.48155 31.6386 5.62012 30.58 5.62012ZM31.22 25.4601C31.22 25.8121 30.932 26.1001 30.58 26.1001H2.42C2.06675 26.1001 1.78 25.8121 1.78 25.4601V7.54012C1.78 7.1868 2.06675 6.90012 2.42 6.90012H30.58C30.932 6.90012 31.22 7.1868 31.22 7.54012V25.4601Z"
                                            fill="black"
                                            fillOpacity="0.2"
                                        />
                                        <path
                                            d="M1.14062 11.3801H31.8606V13.9401H1.14062V11.3801Z"
                                            fill="#2A6880"
                                        />
                                        <path
                                            d="M1.14062 11.3801H31.8606V13.9401H1.14062V11.3801Z"
                                            fill="black"
                                            fillOpacity="0.2"
                                        />
                                        <path
                                            d="M1.14062 11.3801H31.8606V13.9401H1.14062V11.3801Z"
                                            fill="black"
                                            fillOpacity="0.2"
                                        />
                                        <path
                                            d="M31.86 10.7402H1.14C0.78675 10.7402 0.5 11.0269 0.5 11.3802V13.9402C0.5 14.2935 0.78675 14.5802 1.14 14.5802H31.86C32.2133 14.5802 32.5 14.2935 32.5 13.9402V11.3802C32.5 11.0269 32.2133 10.7402 31.86 10.7402ZM31.22 13.3002H1.78V12.0202H31.22V13.3002ZM17.78 18.4202H6.26C5.90675 18.4202 5.62 18.707 5.62 19.0602C5.62 19.4135 5.90675 19.7002 6.26 19.7002H17.78C18.1333 19.7002 18.42 19.4135 18.42 19.0602C18.42 18.7069 18.1333 18.4202 17.78 18.4202ZM12.66 20.9802H6.26C5.90675 20.9802 5.62 21.267 5.62 21.6202C5.62 21.9735 5.90675 22.2602 6.26 22.2602H12.66C13.0132 22.2602 13.3 21.9735 13.3 21.6202C13.3 21.267 13.0132 20.9802 12.66 20.9802Z"
                                            fill="#2A6880"
                                        />
                                        <path
                                            d="M31.86 10.7402H1.14C0.78675 10.7402 0.5 11.0269 0.5 11.3802V13.9402C0.5 14.2935 0.78675 14.5802 1.14 14.5802H31.86C32.2133 14.5802 32.5 14.2935 32.5 13.9402V11.3802C32.5 11.0269 32.2133 10.7402 31.86 10.7402ZM31.22 13.3002H1.78V12.0202H31.22V13.3002ZM17.78 18.4202H6.26C5.90675 18.4202 5.62 18.707 5.62 19.0602C5.62 19.4135 5.90675 19.7002 6.26 19.7002H17.78C18.1333 19.7002 18.42 19.4135 18.42 19.0602C18.42 18.7069 18.1333 18.4202 17.78 18.4202ZM12.66 20.9802H6.26C5.90675 20.9802 5.62 21.267 5.62 21.6202C5.62 21.9735 5.90675 22.2602 6.26 22.2602H12.66C13.0132 22.2602 13.3 21.9735 13.3 21.6202C13.3 21.267 13.0132 20.9802 12.66 20.9802Z"
                                            fill="black"
                                            fillOpacity="0.2"
                                        />
                                        <path
                                            d="M31.86 10.7402H1.14C0.78675 10.7402 0.5 11.0269 0.5 11.3802V13.9402C0.5 14.2935 0.78675 14.5802 1.14 14.5802H31.86C32.2133 14.5802 32.5 14.2935 32.5 13.9402V11.3802C32.5 11.0269 32.2133 10.7402 31.86 10.7402ZM31.22 13.3002H1.78V12.0202H31.22V13.3002ZM17.78 18.4202H6.26C5.90675 18.4202 5.62 18.707 5.62 19.0602C5.62 19.4135 5.90675 19.7002 6.26 19.7002H17.78C18.1333 19.7002 18.42 19.4135 18.42 19.0602C18.42 18.7069 18.1333 18.4202 17.78 18.4202ZM12.66 20.9802H6.26C5.90675 20.9802 5.62 21.267 5.62 21.6202C5.62 21.9735 5.90675 22.2602 6.26 22.2602H12.66C13.0132 22.2602 13.3 21.9735 13.3 21.6202C13.3 21.267 13.0132 20.9802 12.66 20.9802Z"
                                            fill="black"
                                            fillOpacity="0.2"
                                        />
                                    </g>
                                    <defs>
                                        <clipPath id="clip0_4394_11946">
                                            <rect
                                                className="w-full h-full"
                                                fill="white"
                                                transform="translate(0.5 0.5)"
                                            />
                                        </clipPath>
                                    </defs>
                                </svg>

                            </div>
                        </button>












                        import { useState } from "react";
import { toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import ToastifyContainer from "../../../components/Common/ToastifyContainer";

const ContactForm = () => {
    const [formData, setFormData] = useState({
        firstName: "",
        lastName: "",
        email: "",
        confirmEmail: "",
        subject: "",
        message: "",
    });

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData({ ...formData, [name]: value });
    };

    const validateEmail = (email) => {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    };

    const handleSubmit = (e) => {
        e.preventDefault();

        // Basic validation for required fields
        for (const field in formData) {
            if (formData[field] === "") {
                toast.error(`Please fill out the ${field} field.`);
                return;
            }
        }

        // Email validation
        if (!validateEmail(formData.email)) {
            toast.error("Please enter a valid email address.");
            return;
        }

        // Confirm email validation
        if (formData.email !== formData.confirmEmail) {
            toast.error("The email addresses do not match.");
            return;
        }

        console.log("Form Submitted:", formData);
        toast.success("Form submitted successfully!");

        setFormData({
            firstName: "",
            lastName: "",
            email: "",
            confirmEmail: "",
            subject: "",
            message: "",
        });
    };

    return (
        <section className="2xl:py-28 xl:py-28 lg:py-20 md:py-16 sm:py-16 py-12 bg-[#84a9b9]/10">
            <div className="container mx-auto 2xl:px-0 xl:px-0 lg:px-0 md:px-2 sm:px-2 px-2">
                <div className="flex justify-center">
                    <form
                        onSubmit={handleSubmit}
                        className="2xl:w-[60%] xl:w-[60%] lg:w-[70%] md:w-[100%] sm:w-[100%] w-[100%] flex flex-col gap-8 bg-white rounded-2xl shadow-[0px_10px_30px_0px_rgba(187,187,187,0.16)] 2xl:p-14 xl:p-14 lg:p-14 md:p-8 sm:p-6 p-4"
                    >
                        <div className="flex justify-between 2xl:flex-row xl:flex-row lg:flex-row md:flex-row sm:flex-col flex-col w-full gap-4">
                            <div className="flex w-full flex-col gap-4">
                                <label
                                    htmlFor="first-name"
                                    className="text-[#122c36]/70 2xl:text-2xl xl:text-2xl lg:text-2xl md:text-lg sm:text-lg text-lg font-normal"
                                >
                                    First Name*
                                </label>
                                <input
                                    type="text"
                                    id="first-name"
                                    name="firstName"
                                    placeholder="Enter your first name"
                                    className="text-[#7e8b99] text-base font-normal px-6 py-4 bg-[#fafbfc] rounded-2xl border border-[#709aaa] outline-[#2A6880]"
                                    value={formData.firstName}
                                    onChange={handleChange}
                                    required
                                />
                            </div>
                            <div className="flex w-full flex-col gap-4">
                                <label
                                    htmlFor="last-name"
                                    className="text-[#122c36]/70 2xl:text-2xl xl:text-2xl lg:text-2xl md:text-lg sm:text-lg text-lg font-normal"
                                >
                                    Last Name*
                                </label>
                                <input
                                    type="text"
                                    id="last-name"
                                    name="lastName"
                                    placeholder="Enter your last name"
                                    className="text-[#7e8b99] text-base font-normal px-6 py-4 bg-[#fafbfc] rounded-2xl border border-[#709aaa] outline-[#2A6880]"
                                    value={formData.lastName}
                                    onChange={handleChange}
                                    required
                                />
                            </div>
                        </div>
                        <div className="flex w-full flex-col gap-4">
                            <label
                                htmlFor="email"
                                className="text-[#122c36]/70 2xl:text-2xl xl:text-2xl lg:text-2xl md:text-lg sm:text-lg text-lg font-normal"
                            >
                                Email Address*
                            </label>
                            <input
                                type="email"
                                id="email"
                                name="email"
                                placeholder="Enter your email address"
                                className="text-[#7e8b99] text-base font-normal px-6 py-4 bg-[#fafbfc] rounded-2xl border border-[#709aaa] outline-[#2A6880]"
                                value={formData.email}
                                onChange={handleChange}
                                required
                            />
                        </div>
                        <div className="flex w-full flex-col gap-4">
                            <label
                                htmlFor="confirm-email"
                                className="text-[#122c36]/70 2xl:text-2xl xl:text-2xl lg:text-2xl md:text-lg sm:text-lg text-lg font-normal"
                            >
                                Confirm Email Address*
                            </label>
                            <input
                                type="email"
                                id="confirm-email"
                                name="confirmEmail"
                                placeholder="Confirm your email address"
                                className="text-[#7e8b99] text-base font-normal px-6 py-4 bg-[#fafbfc] rounded-2xl border border-[#709aaa] outline-[#2A6880]"
                                value={formData.confirmEmail}
                                onChange={handleChange}
                                required
                            />
                        </div>
                        <div className="flex w-full flex-col gap-4">
                            <label
                                htmlFor="subject"
                                className="text-[#122c36]/70 2xl:text-2xl xl:text-2xl lg:text-2xl md:text-lg sm:text-lg text-lg font-normal"
                            >
                                Subject*
                            </label>
                            <input
                                type="text"
                                id="subject"
                                name="subject"
                                placeholder="Enter your subject"
                                className="text-[#7e8b99] text-base font-normal px-6 py-4 bg-[#fafbfc] rounded-2xl border border-[#709aaa] outline-[#2A6880]"
                                value={formData.subject}
                                onChange={handleChange}
                                required
                            />
                        </div>
                        <div className="flex w-full flex-col gap-4">
                            <label
                                htmlFor="message"
                                className="text-[#122c36]/70 2xl:text-2xl xl:text-2xl lg:text-2xl md:text-lg sm:text-lg text-lg font-normal"
                            >
                                Message
                            </label>
                            <textarea
                                id="message"
                                name="message"
                                placeholder="Enter your message here"
                                className="text-[#7e8b99] text-base font-normal px-6 py-4 bg-[#fafbfc] 2xl:h-48 xl:h-48 lg:h-48 md:h-40 sm:h-32 h-32 rounded-2xl border border-[#709aaa]"
                                value={formData.message}
                                onChange={handleChange}
                            ></textarea>
                        </div>
                        <div className="flex justify-end">
                            <button
                                type="submit"
                                className="bg-[#2A6880]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-bold text-white py-4 px-6 rounded-2xl"
                            >
                                Submit
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            {/* Toast Container for React Toastify */}
            <ToastifyContainer />
        </section>
    );
};

export default ContactForm;


import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { toast } from "react-toastify";
import { useForm } from "react-hook-form";
import PaymentPopup from "./PaymentPopup/PaymentPopup"; // import the PaymentPopup component
import ToastifyContainer from "../../components/Common/ToastifyContainer";

const JoinNow = () => {

    const overview = [
        {
            id: 1,
            title: "Educational videos and podcasts",
        },
        {
            id: 2,
            title: "Access to ever-increasing library of articles and PDFs",
        },
        {
            id: 3,
            title: "Updates on recent publications and ‘recommended reading’ list",
        },
        {
            id: 4,
            title: "Personal, real-time expert advice (Zoom/Skype)",
        },
        {
            id: 5,
            title: "Support with problems related to interactions with professional organisations, health agencies, insurance companies, and legal-type issues (incl. support in challenging & educating health authorities)",
        },
        {
            id: 6,
            title: "Admission to a semi-annual webinar",
        },
        {
            id: 7,
            title: "Assistance/advice with peer-reviewed publications",
        }
    ]




    const [isPopupOpen, setIsPopupOpen] = useState(false);
    const [selectedAmount, setSelectedAmount] = useState(0); // To store selected amount
    const navigate = useNavigate();
    const { register, handleSubmit, formState: { errors } } = useForm();
    const onSubmit = (data) => {
        if (!data.membership) {
            toast.error("Please select a membership option.");
            return;
        }
        const amount = data.membership === "full-member" ? 100 : 25;
        setSelectedAmount(amount);
        setIsPopupOpen(true);
    };
    const handlePaymentSubmit = () => {
        setIsPopupOpen(false);
        toast.success("Form submitted successfully!");
        navigate("/membership-complete");
    };
    const handlePopupClose = () => {
        setIsPopupOpen(false);
    };

    return (
        <section className="2xl:py-28 xl:py-28 lg:py-20 md:py-16 sm:py-16 py-12 2xl:mt-16 xl:mt-16 lg:mt-12 md:mt-12 sm:mt-12 mt-12">
            <div className="container mx-auto 2xl:px-0 xl:px-0 lg:px-0 md:px-2 sm:px-2 px-2">
                <div className="flex flex-col gap-10">
                    <div className="flex flex-col gap-10">
                        <h3 className="2xl:text-6xl xl:text-6xl lg:text-5xl md:text-4xl sm:text-3xl text-2xl font-bold text-[#2A6880]">
                            Membership benefits
                        </h3>
                        <div className="flex flex-col gap-4">
                            <p className="text-[#122c36]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-normal">
                                Membership to the International MAOI Expert Group is open to all bona fide healthcare workers and researchers with an interest in monoamine oxidase inhibitor antidepressants.
                            </p>
                            <p className="text-[#122c36]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-normal">
                                The benefits of membership include facilitated access to reliable knowledge and the feedback and advice from the participating experts, as well as the collegiate support of other practising specialists who interact to advise and support with the practical management of patients in need.
                            </p>
                        </div>

                        <h4 className="text-[#122c36]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-normal">
                            Benefits overview:
                        </h4>
                        <ul className="list-[lower-roman] pl-7 text-[#122c36]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-normal flex flex-col gap-3">
                            {overview.map((item) => (
                                <li key={item.id}>{item.title}</li>
                            ))}
                        </ul>
                    </div>

                    <div className="flex flex-col gap-10">
                        <h3 className="2xl:text-6xl xl:text-6xl lg:text-5xl md:text-4xl sm:text-3xl text-2xl font-bold text-[#2A6880]">
                            Membership fee
                        </h3>
                        <p className="text-[#122c36]/70 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-normal">
                            Following consultation with the Presiding Council, the Group has resolved to introduce a membership fee which will grant members access to, and participation rights in, the Roundtable discussion group, as well as access to the clinical recommendations, patient information documents, and general educational content posted in the members-only section of the website.
                        </p>
                    </div>
                    <div className="flex flex-col gap-10">
                        <h3 className="2xl:text-6xl xl:text-6xl lg:text-5xl md:text-4xl sm:text-3xl text-2xl font-bold text-[#2A6880]">
                            Select a membership option (per annum)
                        </h3>
                        <form onSubmit={handleSubmit(onSubmit)} action="" className="flex flex-col gap-10">
                            <div className="flex flex-col gap-4">
                                <div className="flex items-center gap-3">
                                    <input
                                        type="radio"
                                        id="full-member"
                                        value="full-member"
                                        {...register("membership", { required: "Please select a membership option" })}
                                    />
                                    <label htmlFor="full-member" className="text-[#122c36]/70">
                                        Full member: $100 (includes access to the Topicbox Roundtable discussion group)
                                    </label>
                                </div>
                                <div className="flex items-center gap-3">
                                    <input
                                        type="radio"
                                        id="discretionary-member"
                                        value="discretionary-member"
                                        {...register("membership", { required: "Please select a membership option" })}
                                    />
                                    <label htmlFor="discretionary-member" className="text-[#122c36]/70">
                                        Discretionary membership*: $25
                                    </label>
                                </div>
                                {errors.membership && <p className="text-red-500">{errors.membership.message}</p>}
                            </div>
                            <p id="membership-help" className="text-[#122c36]/70">
                                **In order to maintain our objective of maximum inclusivity, there is a discretionary membership option for financially disadvantaged participants.
                            </p>
                            <button
                                type="submit"
                                className="2xl:w-1/6 xl:w-1/6 lg:w-1/6 md:w-full sm:w-full w-full py-4 px-6 bg-[#2A6880] text-white 2xl:text-xl xl:text-xl lg:text-xl md:text-lg sm:text-base text-base font-bold rounded-2xl"
                            >
                                Next
                            </button>
                        </form>
                    </div>

                </div>
            </div>
            {isPopupOpen && (
                <PaymentPopup
                    amount={selectedAmount}
                    onClose={handlePopupClose}
                    onSubmit={handlePaymentSubmit}
                />
            )}
            <ToastifyContainer />
        </section>
    );
};

export default JoinNow;




             {/* <input
                                type="number"
                                id="otp"
                                placeholder="Enter your OTP"
                                className="text-[#7e8b99] text-base font-normal px-6 md:py-4 py-2 bg-[#fafbfc] outline-[#2A6880] text-center rounded-2xl border border-[#709aaa]"
                                {...register('otp', {
                                    required: 'OTP is required',
                                    pattern: {
                                        value: /^[0-9]{5}$/,
                                        message: 'OTP must be exactly 5 digits',
                                    },
                                })}
                            /> */}
















                            // import { useState } from "react";
// import { useForm } from "react-hook-form";
// import ToastifyContainer from "../../../components/Common/ToastifyContainer";
// import { toast } from "react-toastify";

// const EmailVerify = () => {
//     const [step, setStep] = useState(1);
//     const { register, handleSubmit, formState: { errors, isValid } } = useForm({ mode: "onChange" });

//     const onSubmit = (data) => {
//         console.log("Form Data:", data);

//         if (step === 1) {
//             console.log("Sending OTP to:", data.email);
//             setStep(2);
//         } else if (step === 2) {
//             console.log("Verifying OTP:", data.otp);
//             toast.success("Your password has been successfully reset!");
//             window.location.reload();
//         }
//     };

//     const handleResendOtp = () => {

//         toast.success("OTP has been resent!");
//     };

//     return (
//         <div className="fixed left-0 top-0 w-full h-full lg:py-5 py-0 px-2 flex justify-center items-center bg-opacity-50 bg-black backdrop-blur-md">
//             <div className='flex flex-col justify-center gap-6 bg-white p-8 rounded-lg shadow-xl xl:w-1/3 lg:w-1/2 md:w-2/3 sm:w-3/4 w-full h-[450px] overflow-y-auto'>
//                 <h3 className="2xl:text-3xl xl:text-3xl lg:text-2xl md:text-xl text-xl text-center font-bold text-[#2A6880]">
//                     {step === 1 ? "Email Verify" : "Verify OTP"}
//                 </h3>

//                 <form className="flex flex-col gap-10" onSubmit={handleSubmit(onSubmit)}>
//                     {step === 1 && (
//                         <div className="flex flex-col gap-4">
//                             <input
//                                 type="email"
//                                 id="email"
//                                 placeholder="Enter your email address"
//                                 className="text-[#7e8b99] text-base font-normal px-6 py-4 bg-[#fafbfc] text-center rounded-2xl border border-[#709aaa]"
//                                 {...register('email', {
//                                     required: 'Email is required',
//                                     pattern: {
//                                         value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,
//                                         message: 'Invalid email address',
//                                     },
//                                 })}
//                             />
//                             {errors.email && <p className="text-center text-red-500 text-sm">{errors.email.message}</p>}
//                         </div>
//                     )}

//                     {step === 2 && (
//                         <div className="flex flex-col gap-4">
//                             <input
//                                 type="number"
//                                 id="otp"
//                                 placeholder="Enter your OTP"
//                                 className="text-[#7e8b99] text-base font-normal px-6 md:py-4 py-2 bg-[#fafbfc] text-center rounded-2xl border border-[#709aaa]"
//                                 {...register('otp', {
//                                     required: 'OTP is required',
//                                     pattern: {
//                                         value: /^[0-9]{5}$/,
//                                         message: 'OTP must be exactly 5 digits',
//                                     },
//                                 })}
//                             />
//                             <button
//                                 type="button"
//                                 onClick={handleResendOtp}
//                                 className="md:text-lg text-base font-bold text-[#7e8b99]"
//                                 disabled={step !== 2}
//                             >
//                                 Resend OTP
//                             </button>
//                             {errors.otp && <p className="text-center text-red-500 text-sm">{errors.otp.message}</p>}
//                         </div>
//                     )}


//                     <div className="flex justify-center gap-4">
//                         <button
//                             type="submit"
//                             className="text-white font-bold px-12 lg:py-4 py-3 w-[250px] rounded-2xl bg-[#2A6880] hover:bg-[#275769]"
//                             disabled={!isValid || (step === 2 && !isValid)}
//                         >
//                             {step === 1 ? "Send OTP" : "Verify OTP"}
//                         </button>
//                     </div>
//                 </form>

//                 <div className="flex justify-center gap-4">
//                     {[1, 2].map((num) => (
//                         <button
//                             key={num}
//                             className={`rounded-full h-8 w-8 ${step >= num ? "bg-[#709aaa] text-white" : "bg-gray-300"}`}
//                             onClick={() => setStep(num)}
//                         >
//                             {num}
//                         </button>
//                     ))}
//                 </div>
//             </div>
//             <ToastifyContainer />
//         </div>
//     );
// };

// export default EmailVerify;


 {/* {isLoginOpen ? (
                    <LoginPopUp onLoginSuccess={handleLoginSuccess} />
                ) : ( */}

                
    // const handleLoginSuccess = () => setIsLoginOpen(false);

    // const [isLoginOpen, setIsLoginOpen] = useState(true);